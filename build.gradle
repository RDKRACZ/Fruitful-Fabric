plugins {
    id 'fabric-loom' version '0.9-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
group = project.maven_group
if (System.env.CI == "true") {
    version = "${project.mod_version}+a${System.env.GITHUB_RUN_NUMBER}.${System.env.GITHUB_REF.replaceAll("refs/heads/", "").replaceAll("/", "-")}"
}
else {
    version = "${project.mod_version}+${project.minecraft_version}-fabric"
}

repositories {
    flatDir {
        dirs 'libs'
    }
    maven {
        name = 'TerraformersMC Maven'
        url = 'https://maven.terraformersmc.com/'
    }
    maven {
        name = 'Shedaniel Maven'
        url "https://maven.shedaniel.me/"
    }
    maven {
        name = 'CurseMaven'
        url = "https://www.cursemaven.com"
    }
}

dependencies {
    // Main Fabric //
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    //modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // API's //
//    modImplementation "curse.maven:differentiate-fabric-525575:${project.differentiate_version}"
//    include "curse.maven:differentiate-fabric-525575:${project.differentiate_version}"
    modImplementation "co.eltrut:differentiate-1.1.0"
    include "co.eltrut:differentiate-1.1.0"
    modImplementation "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"
    include "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"
    modCompileOnly "com.terraformersmc:modmenu:${project.modmenu_version}"
    modRuntime "com.terraformersmc:modmenu:${project.modmenu_version}"
}

loom {
    accessWidenerPath = file "src/main/resources/fruitful.accesswidener"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 16
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}